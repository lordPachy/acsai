for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum/((length(dataset-1) * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum/(length(dataset-1) * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum/((length(dataset)-1) * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum/((length(dataset)) * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
sqrt(var(dataset))[1, 1]*len(dataset)/(len(dataset)-1)
sqrt(var(dataset))[1, 1]*length/(length(dataset)-1)
sqrt(var(dataset))[1, 1]*length(dataset)/(length(dataset)-1)
sqrt(var(dataset)[1, 1]*length(dataset)/(length(dataset)-1))
sqrt(var(dataset)[2, 2]*length(dataset)/(length(dataset)-1))
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
rho = sum/((length(dataset)) * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
rho
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
library(ggplot2)
ggplot(data = dataset, mapping = aes(x = mother, y = daughter)) + geom_point() + geom_smooth(method = "lm")
lm(daughter~mother, data=dataset)
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
lm(mother~daughter, data=dataset)
lm(daughter~mother, data=dataset)
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
print(sum)
}
rho = sum/((length(dataset)) * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
rho
sum = 0
for (i in length(dataset)){
print(sum)
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
rho = sum/((length(dataset)) * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
rho
sum = 0
print(length(dataset))
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
rho = sum/((length(dataset)) * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
rho
sum = 0
for (i in range(10)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
rho = sum/(10 * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
rho
sum = 0
for (i in range(10)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
rho = sum/(9 * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
rho
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in range(10)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
rho = sum/(10 * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
rho
sum = 0
for (i in length(dataset)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in length(dataset)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in range(10))){
sum = 0
for (i in range(10)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in range(10))){
sum = 0
for (i in range(10)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in range(10)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in range(10)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
rho = sum/(10 * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
rho
sum = 0
for (i in range(10)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in range(10)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in range(10)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in range(10)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
print(sum1)
}
rho * sum / sum1
sum = 0
for (i in range(10)){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in range(10)){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in 1:10){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
rho = sum/(10 * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
rho
sum = 0
for (i in 1:10){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in 1:10){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
sum = 0
for (i in 1:10){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
rho = sum/(9 * sqrt(var(dataset))[1, 1] * sqrt(var(dataset))[2,2])
rho
sum = 0
for (i in 1:10){
sum = sum + (dataset$mother[i] - mean(dataset$mother)) * (dataset$daughter[i]-mean(dataset$daughter))
}
sum1 = 0
for (i in 1:10){
sum1 = sum1 + ((dataset$mother[i] - mean(dataset$mother)) ^ 2)
}
rho * sum / sum1
View(dt)
#install.packages("data.table")
#install.packages("AER")
library(data.table)
data("Fertility")
install.packages("data.table")
install.packages"r-dev-tools"
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
install.packages("r-dev-tools")
install.packages("AER")
#install.packages("data.table")
#install.packages("AER")
library(data.table)
#install.packages("data.table")
#install.packages("AER")
library(data.table)
data("Fertility")
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
#install.packages("AER")
library(data.table)
library(AER)
data("Fertility")
dt = setDT(Fertility)
View(dt)
dt[work <= 4, ., by = (afam, hispanic, other)]
dt[work <= 4,  by = (afam, hispanic, other)]
dt[work <= 4, ., by = .(afam, hispanic, other)]
dt[work <= 4, by = .(afam, hispanic, other)]
dt[work <= 4, .N, by = .(afam, hispanic, other)]
dt[work <= 4, .(proportion = (N/cumsum)), by = .(afam, hispanic, other)]
dt[work <= 4, .(proportion = (.N/cumsum)), by = .(afam, hispanic, other)]
dt[work <= 4, .(proportion := (.N/cumsum)), by = .(afam, hispanic, other)]
dt[work <= 4, .(proportion := (.N)), by = .(afam, hispanic, other)]
dt[work <= 4, N, by = .(afam, hispanic, other)]
dt[work <= 4, .N, by = .(afam, hispanic, other)]
dt[work <= 4, .(proportion := .N/length(dt)), by = .(afam, hispanic, other)]
dt[work <= 4, .(proportion = .N/length(dt)), by = .(afam, hispanic, other)]
length(dt)
dt[work <= 4, .(proportion = .N/N(dt)), by = .(afam, hispanic, other)]
dt[work <= 4, .(proportion = .N/.N(dt)), by = .(afam, hispanic, other)]
dt[work <= 4, .(proportion = .N/nrow(dt)), by = .(afam, hispanic, other)]
dt[work <= 4, .(proportion = .N/nrow(dt) * 100), by = .(afam, hispanic, other)]
dt[age%between%]
dt[age %between% c(22, 24) & gender1 == "male"]
dt[age %between% c(22, 24), .(proportion = .N/nrow(dt[age %between% c(22, 24)])),by = gender1]
dt[, .(age_squared = age ^ 2)]
dt[, .(age_squared := age ^ 2)]
dt[, age_squared = age ^ 2]
dt[, age_squared := age ^ 2]
dt[, age_squared := age ^ 2]
dt
dt[.(N(gender1)), by = .(afam, hispanic, other)]
dt[, ., by = .(afam, hispanic, other)]
dt[, , by = .(afam, hispanic, other)]
dt[, .(), by = .(afam, hispanic, other)]
dt[, ., by = .(afam, hispanic, other)]
dt[, , by = .(afam, hispanic, other)]
dt[gender1 == "male"][, , by = .(afam, hispanic, other)]
dt[gender1 == "male"][, .N, by = .(afam, hispanic, other)]
dt[gender1 == "male"][, .N, by = .(afam, hispanic, other)][, min(N)]
dt[gender1 == "male"][, .N, by = .(afam, hispanic, other)][, argmin(N)]
dt[gender1 == "male"][, .N, by = .(afam, hispanic, other)]
dt[gender1 == "male"][, .N, by = .(afam, hispanic, other)][min(N)]
dt[gender1 == "male"][min(N), .N, by = .(afam, hispanic, other)]
dt[gender1 == "male"][min(.N), .N, by = .(afam, hispanic, other)]
dt[gender1 == "male"][min(.N/nrow(dt[, ., by = .(afam, hispanic, other)])), .N, by = .(afam, hispanic, other)]
dt[gender1 == "male"][min(.N/nrow(dt[, , by = .(afam, hispanic, other)])), .N, by = .(afam, hispanic, other)]
dt[gender1 == "male"][, .N, by = .(afam, hispanic, other)]
nrow(dt[, , by = .(afam, hispanic, other)])
nrow(dt[, ., by = .(afam, hispanic, other)])
nrow(dt[by = .(afam, hispanic, other)])
nrow(dt[by = (afam, hispanic, other)])
nrow(dt[by = .(afam, hispanic, other)])
nrow(dt[, ., by = .(afam, hispanic, other)])
nrow(dt[, , by = .(afam, hispanic, other)])
dt[gender1 == "male"][min(.N, .N, by = .(afam, hispanic, other)]
dt[gender1 == "male"][min(.N), .N, by = .(afam, hispanic, other)]
dt[, .N, by = .(afam, hispanic, other)]
dt[, .N, by = .(afam, hispanic, other)][min(.N)]
dt[, .N, by = .(afam, hispanic, other)]
dt[, .N, by = .(afam, hispanic, other)][gender1 == "male"]
dt[gender1 == "male", .N, by = .(afam, hispanic, other)]
dt[gender1 == "male", .(.N, prop = .N/length(dt[gender1])), by = .(afam, hispanic, other)]
dt[gender1 == "male", .(.N, prop = .N/nrow(dt), by = .(afam, hispanic, other)]
dt[gender1 == "male", .(.N, prop = .N/nrow(dt)), by = .(afam, hispanic, other)]
dt[, .N, by = .(afam, hispanic, other)]
dt[, .(.N, gender1), by = .(afam, hispanic, other)]
dt[, .(.N, gender1), by = .(afam, hispanic, other)][, .(N(gender1)/N)]
dt[, .(.N, gender1), by = .(afam, hispanic, other)][, .(.N(gender1)/.N)]
dt[, .(.N, gender1), by = .(afam, hispanic, other)][, .(.N(gender1)/N)]
dt[, .(.N, gender1), by = .(afam, hispanic, other)]
dt[, .(N, gender1), by = .(afam, hispanic, other)]
dt[, .(N := .N, gender1), by = .(afam, hispanic, other)]
dt[, .(N ù:= .N, gender1), by = .(afam, hispanic, other)]
dt[, .(.N, gender1), by = .(afam, hispanic, other)]
dt[, .(.N, gender1), by = .(afam, hispanic, other)]
dt[morekids == "yes", by = (gender1, gender2)]
dt[morekids == "yes", by = .(gender1, gender2)]
dt[morekids == "yes", .N by = .(gender1, gender2)]
dt[morekids == "yes", .N, by = .(gender1, gender2)]
dt[, .N, by = .(gender1, gender2)]
dt[morekids = "yes", .N, by = .(gender1, gender2)]
dt[morekids == "yes", .N, by = .(gender1, gender2)]
dt[morekids == "yes", ciao =.N, by = .(gender1, gender2)]
dt[morekids == "yes", ciao :=.N, by = .(gender1, gender2)]
dt
dt[morekids == "yes", ciao =.N, by = .(gender1, gender2)]
dt[morekids == "yes", .(ciao =.N), by = .(gender1, gender2)]
dt[morekids == "yes", .(ciao :=.N), by = .(gender1, gender2)]
dt[, .(.N, prop = mean(gender1=="male")), by = .(afam, hispanic, other)]
dt[, .(.N, prop = mean(gender1=="male")), by = .(afam, hispanic, other)]
dt[, .(prop = mean(morekids == yes)), by = .(gender1, gender2)]
dt[, .(prop = mean(morekids == "yes")), by = .(gender1, gender2)]
library(data.table)
# Load data with fread
getwd()
dir = "/Users/walter/Desktop/DATA/"
setwd(dir)
dir = "/home/pachy/Desktop/ACSAI/acsai/Data Management/Class practice/Scripts/Time series"
tc <- fread("toy_cor.csv")
head(tc)
setwd(dir)
tc <- fread("toy_cor.csv")
head(tc)
tc <- fread("toy_cor.csv")
head(tc)
####################
#Using one line of code print out the most common car model in the data, and the number of times it appears.
tc[model = max(.model), .N]
####################
#Using one line of code print out the most common car model in the data, and the number of times it appears.
tc[model == max(.model), .N]
####################
#Using one line of code print out the most common car model in the data, and the number of times it appears.
tc[model == max(model), .N]
####################
#Using one line of code print out the most common car model in the data, and the number of times it appears.
tc[model == max(Model), .N]
####################
#Using one line of code print out the most common car model in the data, and the number of times it appears.
tc[Model == max(Model), .N]
tc[, .N, by = Model][order(N)][.N]
tc[, .N, by = Model][order(N)]
tc[, .N, by = Model][order(N)][.N]
####################
#Print out the mean and median price of the 10 most common models.
tc[.(.N, mean(price), median(price)), by = Model]
####################
#Print out the mean and median price of the 10 most common models.
tc[.(.N, mean(Price), median(Price)), by = Model]
####################
#Print out the mean and median price of the 10 most common models.
tc[.(N, mean(Price), median(Price)), by = Model]
####################
#Print out the mean and median price of the 10 most common models.
tc[.(N, meanprice = mean(Price), medianprice = median(Price)), by = Model]
####################
#Print out the mean and median price of the 10 most common models.
tc[.(.N, meanprice = mean(Price), medianprice = median(Price)), by = Model]
####################
#Print out the mean and median price of the 10 most common models.
tc[.(.N, meanprice = mean(Price), medianprice = median(Price)), by = .(Model)]
####################
#Print out the mean and median price of the 10 most common models.
tc[, .(.N, meanprice = mean(Price), medianprice = median(Price)), by = .(Model)]
####################
#Print out the mean and median price of the 10 most common models.
tc[, .(.N, meanprice = mean(Price), medianprice = median(Price)), by = .(Model)][order(N)][.N-10:N]
####################
#Print out the mean and median price of the 10 most common models.
tc[, .(.N, meanprice = mean(Price), medianprice = median(Price)), by = .(Model)][order(N)][.N-10:.N]
tc[, grep("Guarantee", names(tc)) := NULL]
tc[, .(deviation = (Price - mean(Color)))]
tc[, .(deviation := (Price - mean(Color)))]
head(tc)
tc[, sq_dev_bycol := (Price - mean(Price))^2,  by = Color]
tc
tc[, max(color),  = age][, by = Mfg_Year]
tc[, .(most_common := max(color)), by = age][, ., by = Mfg_Year]
tc[, .(most_common := max(color)), by = Age_08_04][, ., by = Mfg_Year]
tc[, .(most_common = max(color)), by = Age_08_04][, ., by = Mfg_Year]
tc[, .(most_common = max(Color)), by = Age_08_04][, ., by = Mfg_Year]
tc[, .(most_common = max(Color)), by = (Age_08_04, Mfg_Year)]
tc[, .(most_common = max(Color)), by = .(Age_08_04, Mfg_Year)]
tc[, .N,
by = .(floor(Age_08_04/12), Color)][order(floor, N),
.SD[.N],
by = floor]
install.packages("styler")
styler:::set_style_transformers()
flights |>
filter(
dest == "IAH"
) |>
group_by(year, month, day) |>
summarize(
n = n(),
delay = mean(arr_delay,na.rm=TRUE)
) |>
filter(n > 10)
